качаем git. 
устанавливаем.
заходим в папку с проектом и открываем командную строку в этой папке

git init - инициализируем гит в этой папке. создастся скрытая папка .git

git config --global user.name "Ivan"                |
                                                    |-- добавляем свои контакты для того чтобы при коммитах оставалась инфа о том кто нагадил. 
git config --global user.email ivan@ivanemail.com   |

git status - показывает текущее состояние файлов

git add -A - добавляет файлы для отслеживания гитом. ключ -A указывает что для отслеживания нужно добавить все файлы. можно указать отдельно файл, или по маске *.css - добавяться все css файлы

git commit -a -m"first commit" создаёт контрольный снимок всех добавленных файлов. -m добавляет комментарий к коммиту, например "я нагадил в блоке footer".

изменили файл. 

git add -A --> git commit -a -m"я ещё больше нагадил в блоке footer" - теперь у вас есть 2 контрольных снимка.  

git log - выдаёт всю инфу по коммитам кто и во сколько гадил в проекте

идём в интернет на github.com, регаемся и создаём свой первый репозиторий. 

git remote add origin https://github.com/mpakoff/udemyjs.git
или git remote add origin git@bitbucket.org:mpakoff/react_minin.git    - добавляем удалённый репозиторий в наш локальный, то есть связываем его.

git push -u origin master - отправляем наш локальный репозиторий с от'commit'чеными файлами на удалённый репозиторий в ветку master(основная ветка). ВНИМАНИЕ! при первом пуше запросят логин и пароль от гитхаба

изменили файл. или добавили:

git add -A --> git commit -a -m"comment" --> git push. снимок файла отправился на удалённый репозиторий.


Profit. Вы великолепны. 

Работаем с другого компа. 

идём на github в наш репозиторий и жмякаем Clon or Download и копируем адрес репозитория

далее в компе на работе:

git clone https://github.com/mpakoff/udemyjs.git project_work - клонируем из удаленного репозитория в папку project_work и он уже связан с удаленным репозиторием

открываем наш склонированный проект и работаем. (git add -A --> git commit -a -m"comment" --> git push)

возвращаемся домой(или переходим на другой комп):

git pull - получаем изменённые на работа файлы на домашний комп. ВНМАНИЕ! как только вы садитесь за другой комп git pull выполняется сразу же. иначе...

а что иначе?

Ситуация:

ктото изменил файлы и запушил его в удалённый репозиторий. а ты и не в курсе. и не выполнил git pull и кодишь кодишь. и захотел запушить свои изменения на удалённый 
репозиторий. и тут тебе git даст по морде ошибкой, ибо в удалённом репозитории более новая версия репозитория в отличии от локального репозитория. и в 
итоге у тебя и на удалённом репозитории изменения и на локальном.

в этом случае делаем 
git pull - гит сольёт эти репозитории (увидите слово merge) и попросит ввести комментарий к этому действию, затем CTRL+C 2 раза затем :wq! и нажать enter. //тут я хз чо за команды. позже разберусь
произойдёт слияние 

git push - таки пушим в удалённый репозиторий. 

gitignore - в этом файле прописывается всё что не стоит пушить на удалённый сервер, например большие файлы или конфиденциальная инфа. 

GitKraken - визуальное отображение действий с репозиторием. круто выглядит. 







